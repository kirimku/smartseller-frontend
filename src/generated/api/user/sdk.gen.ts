// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as Options2, TDataShape } from './client';
import { client } from './client.gen';
import type { GetApiV1UsersMeData, GetApiV1UsersMeErrors, GetApiV1UsersMeResponses } from './types.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = Options2<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get current user profile
 * Retrieves the current authenticated user's profile information including:
 * - Basic user details (name, email, phone, etc.)
 * - User tier/membership level (pendekar, tuan_muda, tuan_besar, tuan_raja)
 * - Wallet balance and wallet ID
 * - Transaction count and account status
 *
 * **Authentication Required**: This endpoint requires a valid Bearer token.
 *
 */
export const getApiV1UsersMe = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1UsersMeData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiV1UsersMeResponses, GetApiV1UsersMeErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/users/me',
        ...options
    });
};
