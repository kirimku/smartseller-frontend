# Single Domain Multi-Domain Nginx Configuration
# Serves both smartseller.com and app.rexus.com from the same location

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

# Upstream API servers (can route to different backends per domain)
upstream platform_api {
    server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;
    # Add more backend servers for load balancing
    # server 127.0.0.1:3002 max_fails=3 fail_timeout=30s;
}

upstream tenant_api {
    server 127.0.0.1:3002 max_fails=3 fail_timeout=30s;
    # Add more backend servers for load balancing
    # server 127.0.0.1:3003 max_fails=3 fail_timeout=30s;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name smartseller.com www.smartseller.com app.rexus.com www.app.rexus.com;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }
    
    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server block - serves both domains
server {
    listen 443 ssl http2;
    server_name smartseller.com www.smartseller.com app.rexus.com www.app.rexus.com;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/smartseller.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/smartseller.com/privkey.pem;
    ssl_certificate /etc/letsencrypt/live/app.rexus.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/app.rexus.com/privkey.pem;
    
    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Document root - same for both domains
    root /var/www/smartseller/dist;
    index index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https://api.smartseller.com https://api.rexus.com wss://api.smartseller.com wss://api.rexus.com; media-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self';" always;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Rate limiting for general requests
    limit_req zone=general burst=50 nodelay;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # Handle missing files gracefully
        try_files $uri =404;
    }

    # PWA assets with specific caching
    location = /manifest.webmanifest {
        add_header Content-Type application/manifest+json;
        add_header Cache-Control "public, max-age=86400"; # 1 day
        expires 1d;
    }

    location = /sw.js {
        add_header Content-Type application/javascript;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        expires 0;
    }

    location ~* /workbox-.*\.js$ {
        add_header Content-Type application/javascript;
        add_header Cache-Control "public, max-age=31536000"; # 1 year
        expires 1y;
    }

    # API proxy with domain-based routing
    location /api/ {
        # Rate limiting for API calls
        limit_req zone=api burst=20 nodelay;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Route to different backends based on host
        if ($host ~ "smartseller\.com") {
            proxy_pass http://platform_api;
        }
        if ($host ~ "app\.rexus\.com") {
            proxy_pass http://tenant_api;
        }
        
        # Default to tenant API
        proxy_pass http://tenant_api;
        
        # Proxy headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # WebSocket support for real-time features
    location /ws/ {
        proxy_pass http://tenant_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy - $host - single build multi-domain\n";
        add_header Content-Type text/plain;
    }

    # Robots.txt - can be domain-specific
    location = /robots.txt {
        # Serve different robots.txt based on domain
        if ($host ~ "smartseller\.com") {
            try_files /robots-platform.txt /robots.txt;
        }
        if ($host ~ "app\.rexus\.com") {
            try_files /robots-rexus.txt /robots.txt;
        }
        
        try_files $uri /robots.txt;
        access_log off;
        log_not_found off;
    }

    # Sitemap routing
    location ~ ^/sitemap.*\.xml$ {
        # Domain-specific sitemaps
        if ($host ~ "smartseller\.com") {
            try_files $uri /sitemap-platform.xml =404;
        }
        if ($host ~ "app\.rexus\.com") {
            try_files $uri /sitemap-rexus.xml =404;
        }
        
        try_files $uri =404;
        access_log off;
    }

    # Security: Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.(htaccess|htpasswd|ini|log|sh|inc|bak)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Main SPA route - serves same index.html for all domains
    # This is where the magic happens - same file, different experience
    location / {
        # Try to serve static files first, then fallback to SPA
        try_files $uri $uri/ /index.html;
        
        # Add domain context headers for JavaScript detection
        add_header X-Domain-Context $host always;
        
        # Cache control for HTML
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        expires 0;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
        try_files /404.html /index.html;
    }
    
    location = /50x.html {
        internal;
        try_files /50x.html /index.html;
    }

    # Logging
    access_log /var/log/nginx/smartseller-multi-domain.access.log combined;
    error_log /var/log/nginx/smartseller-multi-domain.error.log warn;
}